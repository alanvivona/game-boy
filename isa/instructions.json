{
    "instructions": [
        {
            "opcode": 0,
            "description": "descriptions are not yet supported",
            "mnemonic": "NOP",
            "fullMnemonic": "NOP -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 1,
            "description": "Load 16bit immediate value into",
            "mnemonic": "LD",
            "fullMnemonic": "LD BC,nn",
            "operands": [
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 2,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (BC),A",
            "operands": [
                {
                    "description": "(BC)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 3,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC BC",
            "operands": [
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 4,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 5,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 6,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,n",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 7,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLCA",
            "fullMnemonic": "RLCA",
            "operands": []
        },
        {
            "opcode": 8,
            "description": "Put Stack Pointer (SP) at address nn",
            "mnemonic": "LD",
            "fullMnemonic": "LD (nn),SP",
            "operands": [
                {
                    "description": "(nn)",
                    "size": 16,
                    "type": "",
                    "mask": "(hh)"
                },
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 9,
            "description": "descriptions are not yet supported",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD HL,BC",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 10,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(BC)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(BC)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 11,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC BC",
            "operands": [
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 12,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 13,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 14,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,n",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 15,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRCA",
            "fullMnemonic": "RRCA",
            "operands": []
        },
        {
            "opcode": 17,
            "description": "Load 16bit immediate value into",
            "mnemonic": "LD",
            "fullMnemonic": "LD DE,nn",
            "operands": [
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 18,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (DE),A",
            "operands": [
                {
                    "description": "(DE)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 19,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC DE",
            "operands": [
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 20,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 21,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 22,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,n",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 23,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLA",
            "fullMnemonic": "RLA",
            "operands": []
        },
        {
            "opcode": 24,
            "description": "descriptions are not yet supported",
            "mnemonic": "JR",
            "fullMnemonic": "JR n",
            "operands": [
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 25,
            "description": "descriptions are not yet supported",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD HL,DE",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 26,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(DE)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(DE)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 27,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC DE",
            "operands": [
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 28,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 29,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 30,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,n",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 31,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRA",
            "fullMnemonic": "RRA",
            "operands": []
        },
        {
            "opcode": 32,
            "description": "descriptions are not yet supported",
            "mnemonic": "JR",
            "fullMnemonic": "JR NZ,*",
            "operands": [
                {
                    "description": "NZ",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "*",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 33,
            "description": "Load 16bit immediate value into",
            "mnemonic": "LD",
            "fullMnemonic": "LD HL,nn",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 34,
            "description": "Put A into memory address HL. Increment HL. Same as: LD (HL),A - INC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HLI),A",
            "operands": [
                {
                    "description": "(HLI)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 34,
            "description": "Put A into memory address HL. Increment HL. Same as: LD (HL),A - INC HL",
            "mnemonic": "LDI",
            "fullMnemonic": "LDI (HL),A",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 34,
            "description": "Put A into memory address HL. Increment HL. Same as: LD (HL),A - INC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL+),A",
            "operands": [
                {
                    "description": "(HL+)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 35,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC HL",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 36,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 37,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 38,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,n",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 39,
            "description": "descriptions are not yet supported",
            "mnemonic": "DAA",
            "fullMnemonic": "DAA",
            "operands": []
        },
        {
            "opcode": 40,
            "description": "descriptions are not yet supported",
            "mnemonic": "JR",
            "fullMnemonic": "JR Z,*",
            "operands": [
                {
                    "description": "Z",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "*",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 41,
            "description": "descriptions are not yet supported",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD HL,HL",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 42,
            "description": "Put value at address HL into A. Increment HL. Same as: LD A,(HL) - INC HL",
            "mnemonic": "LDI",
            "fullMnemonic": "LDI A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 42,
            "description": "Put value at address HL into A. Increment HL. Same as: LD A,(HL) - INC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(HL+)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL+)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 42,
            "description": "Put value at address HL into A. Increment HL. Same as: LD A,(HL) - INC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(HLI)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HLI)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 43,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC HL",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 44,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 45,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 46,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,n",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 47,
            "description": "descriptions are not yet supported",
            "mnemonic": "CPL",
            "fullMnemonic": "CPL",
            "operands": []
        },
        {
            "opcode": 48,
            "description": "descriptions are not yet supported",
            "mnemonic": "JR",
            "fullMnemonic": "JR NC,*",
            "operands": [
                {
                    "description": "NC",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "*",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 49,
            "description": "Load 16bit immediate value into",
            "mnemonic": "LD",
            "fullMnemonic": "LD SP,nn",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 50,
            "description": "Put A into memory address HL. Decrement HL. Same as: LD (HL),A - DEC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HLD),A",
            "operands": [
                {
                    "description": "(HLD)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 50,
            "description": "Put A into memory address HL. Decrement HL. Same as: LD (HL),A - DEC HL",
            "mnemonic": "LDD",
            "fullMnemonic": "LDD (HL),A",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 50,
            "description": "Put A into memory address HL. Decrement HL. Same as: LD (HL),A - DEC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL-),A",
            "operands": [
                {
                    "description": "(HL-)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC SP",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 53,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 54,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),n",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 55,
            "description": "descriptions are not yet supported",
            "mnemonic": "SCF",
            "fullMnemonic": "SCF",
            "operands": []
        },
        {
            "opcode": 56,
            "description": "descriptions are not yet supported",
            "mnemonic": "JR",
            "fullMnemonic": "JR C,*",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "*",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 57,
            "description": "descriptions are not yet supported",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD HL,SP",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                },
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 58,
            "description": "Put value at address HL into A. Decrement HL. Same as: LD A,(HL) - DEC HL",
            "mnemonic": "LDD",
            "fullMnemonic": "LDD A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 58,
            "description": "Put value at address HL into A. Decrement HL. Same as: LD A,(HL) - DEC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(HLD)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HLD)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 58,
            "description": "Put value at address HL into A. Decrement HL. Same as: LD A,(HL) - DEC HL",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(HL-)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL-)",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 59,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC SP",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 60,
            "description": "Increment register",
            "mnemonic": "INC",
            "fullMnemonic": "INC A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 61,
            "description": "Decrement register",
            "mnemonic": "DEC",
            "fullMnemonic": "DEC A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 62,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,n",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": null,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 63,
            "description": "descriptions are not yet supported",
            "mnemonic": "CCF",
            "fullMnemonic": "CCF -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 64,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 65,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,C",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 66,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,D",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 67,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,E",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 68,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,H",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 69,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,L",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 70,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,(HL)",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 71,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD B,A",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 72,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,B",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 73,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 74,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,D",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 75,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,E",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 76,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,H",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 77,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,L",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 78,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,(HL)",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 79,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD C,A",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 80,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,B",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 81,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,C",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 82,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 83,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,E",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 84,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,H",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 85,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,L",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 86,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,(HL)",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 87,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD D,A",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 88,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,B",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 89,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,C",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 90,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,D",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 91,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 92,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,H",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 93,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,L",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 94,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,(HL)",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 95,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD E,A",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 96,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,B",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 97,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,C",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 98,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,D",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 99,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,E",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 100,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 101,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,L",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 102,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,(HL)",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 103,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD H,A",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 104,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,B",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 105,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,C",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 106,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,D",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 107,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,E",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 108,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,H",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 109,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 110,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,(HL)",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 111,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD L,A",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 112,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),B",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 113,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),C",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 114,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),D",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 115,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),E",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 116,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),H",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 117,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),L",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 118,
            "description": "descriptions are not yet supported",
            "mnemonic": "HALT",
            "fullMnemonic": "HALT -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 119,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (HL),A",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 120,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,B",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 121,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,C",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 122,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,D",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 123,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,E",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 124,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,H",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 125,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,L",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 126,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 127,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 128,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,B",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 129,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,C",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 130,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,D",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 131,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,E",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 132,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,H",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 133,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,L",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 134,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 135,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 136,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,B",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 137,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,C",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 138,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,D",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 139,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,E",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 140,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,H",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 141,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,L",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 142,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 143,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 144,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 145,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 146,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 147,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 148,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 149,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 150,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 151,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 152,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,B",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 153,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,C",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 154,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,D",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 155,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,E",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 156,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,H",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 157,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,L",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 158,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,(HL)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 159,
            "description": "Subtract n + Carry flag from A",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 160,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 161,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 162,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 163,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 164,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 165,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 166,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 167,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 168,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 169,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": null,
            "description": "Subtract n + Carry flag from A. The manual does not have an opcode for this instruction!!!",
            "mnemonic": "SBC",
            "fullMnemonic": "SBC A,#",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 170,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 171,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 172,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 173,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 174,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 175,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 176,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 177,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 178,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 179,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 180,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 181,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 182,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 183,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 184,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 185,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 186,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 187,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 188,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 189,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 190,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 191,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 192,
            "description": "descriptions are not yet supported",
            "mnemonic": "RET",
            "fullMnemonic": "RET NZ",
            "operands": [
                {
                    "description": "NZ",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 193,
            "description": "Pop two bytes off stack into register pair nn. Increment Stack Pointer (SP) twice.",
            "mnemonic": "POP",
            "fullMnemonic": "POP BC",
            "operands": [
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 194,
            "description": "descriptions are not yet supported",
            "mnemonic": "JP",
            "fullMnemonic": "JP NZ,nn",
            "operands": [
                {
                    "description": "NZ",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 196,
            "description": "descriptions are not yet supported",
            "mnemonic": "CALL",
            "fullMnemonic": "CALL NZ,nn",
            "operands": [
                {
                    "description": "NZ",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 197,
            "description": "Push register pair nn onto stack. Decrement Stack Pointer (SP) twice.",
            "mnemonic": "PUSH",
            "fullMnemonic": "PUSH BC",
            "operands": [
                {
                    "description": "BC",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 198,
            "description": "Add n to A",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD A,#",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 199,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 00H",
            "operands": [
                {
                    "description": "00H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 200,
            "description": "descriptions are not yet supported",
            "mnemonic": "RET",
            "fullMnemonic": "RET Z",
            "operands": [
                {
                    "description": "Z",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 201,
            "description": "descriptions are not yet supported",
            "mnemonic": "RET",
            "fullMnemonic": "RET -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 202,
            "description": "descriptions are not yet supported",
            "mnemonic": "JP",
            "fullMnemonic": "JP Z,nn",
            "operands": [
                {
                    "description": "Z",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 203,
            "description": "descriptions are not yet supported",
            "mnemonic": "SWAP",
            "fullMnemonic": "SWAP L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 204,
            "description": "descriptions are not yet supported",
            "mnemonic": "CALL",
            "fullMnemonic": "CALL Z,nn",
            "operands": [
                {
                    "description": "Z",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 205,
            "description": "descriptions are not yet supported",
            "mnemonic": "CALL",
            "fullMnemonic": "CALL nn",
            "operands": [
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 206,
            "description": "Add n + Carry flag to A",
            "mnemonic": "ADC",
            "fullMnemonic": "ADC A,#",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 207,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 08H",
            "operands": [
                {
                    "description": "08H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 208,
            "description": "descriptions are not yet supported",
            "mnemonic": "RET",
            "fullMnemonic": "RET NC",
            "operands": [
                {
                    "description": "NC",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 209,
            "description": "Pop two bytes off stack into register pair nn. Increment Stack Pointer (SP) twice.",
            "mnemonic": "POP",
            "fullMnemonic": "POP DE",
            "operands": [
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 210,
            "description": "descriptions are not yet supported",
            "mnemonic": "JP",
            "fullMnemonic": "JP NC,nn",
            "operands": [
                {
                    "description": "NC",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 212,
            "description": "descriptions are not yet supported",
            "mnemonic": "CALL",
            "fullMnemonic": "CALL NC,nn",
            "operands": [
                {
                    "description": "NC",
                    "size": 0,
                    "type": "f",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 213,
            "description": "Push register pair nn onto stack. Decrement Stack Pointer (SP) twice.",
            "mnemonic": "PUSH",
            "fullMnemonic": "PUSH DE",
            "operands": [
                {
                    "description": "DE",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 214,
            "description": "Subtract from A",
            "mnemonic": "SUB",
            "fullMnemonic": "SUB #",
            "operands": [
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 215,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 10H",
            "operands": [
                {
                    "description": "10H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 216,
            "description": "descriptions are not yet supported",
            "mnemonic": "RET",
            "fullMnemonic": "RET C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 217,
            "description": "descriptions are not yet supported",
            "mnemonic": "RETI",
            "fullMnemonic": "RETI -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 218,
            "description": "descriptions are not yet supported",
            "mnemonic": "JP",
            "fullMnemonic": "JP C,nn",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 220,
            "description": "descriptions are not yet supported",
            "mnemonic": "CALL",
            "fullMnemonic": "CALL C,nn",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "nn",
                    "size": 16,
                    "type": "**",
                    "mask": "hh"
                }
            ]
        },
        {
            "opcode": 223,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 18H",
            "operands": [
                {
                    "description": "18H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 224,
            "description": "Put A into memory address $FF00+n",
            "mnemonic": "LDH",
            "fullMnemonic": "LDH (n),A",
            "operands": [
                {
                    "description": "(n)",
                    "size": 8,
                    "type": "h",
                    "mask": "(h)"
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 225,
            "description": "Pop two bytes off stack into register pair nn. Increment Stack Pointer (SP) twice.",
            "mnemonic": "POP",
            "fullMnemonic": "POP HL",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 226,
            "description": "Put A into address $FF00 + register C",
            "mnemonic": "LD",
            "fullMnemonic": "LD (C),A",
            "operands": [
                {
                    "description": "(C)",
                    "size": null,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 229,
            "description": "Push register pair nn onto stack. Decrement Stack Pointer (SP) twice.",
            "mnemonic": "PUSH",
            "fullMnemonic": "PUSH HL",
            "operands": [
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 230,
            "description": "Logically AND n with A, result in A",
            "mnemonic": "AND",
            "fullMnemonic": "AND #",
            "operands": [
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 231,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 20H",
            "operands": [
                {
                    "description": "20H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 232,
            "description": "descriptions are not yet supported",
            "mnemonic": "ADD",
            "fullMnemonic": "ADD SP,#",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "#",
                    "size": null,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 233,
            "description": "descriptions are not yet supported",
            "mnemonic": "JP",
            "fullMnemonic": "JP (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 234,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD (nn),A",
            "operands": [
                {
                    "description": "(nn)",
                    "size": 16,
                    "type": "",
                    "mask": "(hh)"
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 238,
            "description": "Logical exclusive OR n with register A, result in A",
            "mnemonic": "XOR",
            "fullMnemonic": "XOR #",
            "operands": [
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 239,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 28H",
            "operands": [
                {
                    "description": "28H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 240,
            "description": "Put memory address $FF00+n into A.",
            "mnemonic": "LDH",
            "fullMnemonic": "LDH A,(n)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(n)",
                    "size": 8,
                    "type": "h",
                    "mask": "(h)"
                }
            ]
        },
        {
            "opcode": 241,
            "description": "Pop two bytes off stack into register pair nn. Increment Stack Pointer (SP) twice.",
            "mnemonic": "POP",
            "fullMnemonic": "POP AF",
            "operands": [
                {
                    "description": "AF",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 242,
            "description": "Put value at address $FF00 + register C into A. Same as: LD A,($FF00+C",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(C)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(C)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 243,
            "description": "descriptions are not yet supported",
            "mnemonic": "DI",
            "fullMnemonic": "DI -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 245,
            "description": "Push register pair nn onto stack. Decrement Stack Pointer (SP) twice.",            "mnemonic": "PUSH",
            "fullMnemonic": "PUSH AF",
            "operands": [
                {
                    "description": "AF",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 246,
            "description": "Logical OR n with register A, result in A",
            "mnemonic": "OR",
            "fullMnemonic": "OR #",
            "operands": [
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 247,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 30H",
            "operands": [
                {
                    "description": "30H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 248,
            "description": "Put SP + n effective address into HL",
            "mnemonic": "LDHL",
            "fullMnemonic": "LDHL SP,n",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "n",
                    "size": 8,
                    "type": "*",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 249,
            "description": "Put HL into Stack Pointer (SP)",
            "mnemonic": "LD",
            "fullMnemonic": "LD SP,HL",
            "operands": [
                {
                    "description": "SP",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "HL",
                    "size": 0,
                    "type": "rr",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 250,
            "description": "Load value of second operand into first operand. When using two byte operands write the LS byte first",
            "mnemonic": "LD",
            "fullMnemonic": "LD A,(nn)",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                },
                {
                    "description": "(nn)",
                    "size": 16,
                    "type": "",
                    "mask": "(hh)"
                }
            ]
        },
        {
            "opcode": 251,
            "description": "descriptions are not yet supported",
            "mnemonic": "EI",
            "fullMnemonic": "EI -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 254,
            "description": "Compare A with n. This is basically an A - n subtraction instruction but the results are thrown away",
            "mnemonic": "CP",
            "fullMnemonic": "CP #",
            "operands": [
                {
                    "description": "#",
                    "size": 8,
                    "type": "h",
                    "mask": "h"
                }
            ]
        },
        {
            "opcode": 255,
            "description": "descriptions are not yet supported",
            "mnemonic": "RST",
            "fullMnemonic": "RST 38H",
            "operands": [
                {
                    "description": "38H",
                    "size": 0,
                    "type": "h",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 4096,
            "description": "descriptions are not yet supported",
            "mnemonic": "STOP",
            "fullMnemonic": "STOP -/-",
            "operands": [
                {
                    "description": "-/-",
                    "size": 0,
                    "type": null,
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51968,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51969,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51970,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51971,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51972,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51973,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51974,
            "description": "descriptions are not yet supported",
            "mnemonic": "RLC",
            "fullMnemonic": "RLC (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51976,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51977,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51978,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51979,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51980,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51981,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51982,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51983,
            "description": "descriptions are not yet supported",
            "mnemonic": "RRC",
            "fullMnemonic": "RRC A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51984,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51985,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51986,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51987,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51988,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51989,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51990,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51991,
            "description": "descriptions are not yet supported",
            "mnemonic": "RL",
            "fullMnemonic": "RL A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51992,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51993,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51994,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51995,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51996,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51997,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51998,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 51999,
            "description": "descriptions are not yet supported",
            "mnemonic": "RR",
            "fullMnemonic": "RR A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52000,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52001,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52002,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52003,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52004,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52005,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52006,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52007,
            "description": "descriptions are not yet supported",
            "mnemonic": "SLA",
            "fullMnemonic": "SLA A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52008,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52009,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52010,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52011,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52012,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52013,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52014,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52015,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRA",
            "fullMnemonic": "SRA A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52024,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL B",
            "operands": [
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52025,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL C",
            "operands": [
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52026,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL D",
            "operands": [
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52027,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL E",
            "operands": [
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52028,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL H",
            "operands": [
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52029,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL L",
            "operands": [
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52030,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL (HL)",
            "operands": [
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52031,
            "description": "descriptions are not yet supported",
            "mnemonic": "SRL",
            "fullMnemonic": "SRL A",
            "operands": [
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52032,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,B",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52033,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,C",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52034,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,D",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52035,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,E",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52036,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,H",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52037,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,L",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52038,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,(HL)",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52039,
            "description": "descriptions are not yet supported",
            "mnemonic": "BIT",
            "fullMnemonic": "BIT b,A",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52096,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,B",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52097,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,C",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52098,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,D",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52099,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,E",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52100,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,H",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52101,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,L",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52102,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,(HL)",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52103,
            "description": "descriptions are not yet supported",
            "mnemonic": "RES",
            "fullMnemonic": "RES b,A",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52160,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,B",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "B",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52161,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,C",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "C",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52162,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,D",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "D",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52163,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,E",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "E",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52164,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,H",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "H",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52165,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,L",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "L",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52166,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,(HL)",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "(HL)",
                    "size": 0,
                    "type": "",
                    "mask": ""
                }
            ]
        },
        {
            "opcode": 52167,
            "description": "descriptions are not yet supported",
            "mnemonic": "SET",
            "fullMnemonic": "SET b,A",
            "operands": [
                {
                    "description": "b",
                    "size": null,
                    "type": "",
                    "mask": ""
                },
                {
                    "description": "A",
                    "size": 0,
                    "type": "r",
                    "mask": ""
                }
            ]
        }
    ]
}